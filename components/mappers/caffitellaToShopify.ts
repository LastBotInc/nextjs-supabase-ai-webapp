/**
 * Mapper function to transform Caffitella product feed data to Shopify product format
 * This can be used as a reference or generated by the schema-mapper tool
 */

export interface CaffitellaProduct {
  id: string;
  title: string;
  link: string;
  image_link: string;
  price: string;
  categories: {
    category: string[];
  };
  description?: string;
}

export interface ShopifyProduct {
  id: number;
  title: string;
  vendor: string;
  productType: string;
  tags: string[];
  status: 'active' | 'draft' | 'archived';
  variants: ShopifyVariant[];
}

export interface ShopifyVariant {
  id: number;
  title: string;
  price: string;
  sku: string;
  inventoryQuantity: number;
}

/**
 * Maps a product from Caffitella feed format to Shopify product format
 * @param source - The source product in Caffitella format
 * @returns Shopify formatted product
 */
export function caffitellaToShopify(source: CaffitellaProduct): ShopifyProduct {
  // Extract categories for product type and tags
  const categories = source.categories?.category || [];
  const productType = categories.length > 0 ? categories[0] : 'Other';
  
  // Create a single variant with the product price
  const variant: ShopifyVariant = {
    id: parseInt(source.id, 10) || 0,
    title: 'Default',
    price: source.price || '0.00',
    sku: `CAFF-${source.id}`,
    inventoryQuantity: 1
  };
  
  return {
    id: parseInt(source.id, 10) || 0,
    title: source.title || 'Unnamed Product',
    vendor: 'Caffitella',
    productType: productType,
    tags: categories,
    status: 'active',
    variants: [variant]
  };
} 